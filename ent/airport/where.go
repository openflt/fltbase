// Code generated by ent, DO NOT EDIT.

package airport

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/openflt/fltbase/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldID, id))
}

// SiteID applies equality check predicate on the "site_id" field. It's identical to SiteIDEQ.
func SiteID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldSiteID, v))
}

// AirportID applies equality check predicate on the "airport_id" field. It's identical to AirportIDEQ.
func AirportID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAirportID, v))
}

// AdoCode applies equality check predicate on the "ado_code" field. It's identical to AdoCodeEQ.
func AdoCode(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAdoCode, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldName, v))
}

// Latitude applies equality check predicate on the "latitude" field. It's identical to LatitudeEQ.
func Latitude(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldLatitude, v))
}

// Longitude applies equality check predicate on the "longitude" field. It's identical to LongitudeEQ.
func Longitude(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldLongitude, v))
}

// Elevation applies equality check predicate on the "elevation" field. It's identical to ElevationEQ.
func Elevation(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldElevation, v))
}

// MagneticVariance applies equality check predicate on the "magnetic_variance" field. It's identical to MagneticVarianceEQ.
func MagneticVariance(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldMagneticVariance, v))
}

// MagneticVarianceYear applies equality check predicate on the "magnetic_variance_year" field. It's identical to MagneticVarianceYearEQ.
func MagneticVarianceYear(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldMagneticVarianceYear, v))
}

// TrafficPatternAltitude applies equality check predicate on the "traffic_pattern_altitude" field. It's identical to TrafficPatternAltitudeEQ.
func TrafficPatternAltitude(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldTrafficPatternAltitude, v))
}

// ChartName applies equality check predicate on the "chart_name" field. It's identical to ChartNameEQ.
func ChartName(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldChartName, v))
}

// DistanceToCity applies equality check predicate on the "distance_to_city" field. It's identical to DistanceToCityEQ.
func DistanceToCity(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldDistanceToCity, v))
}

// Acreage applies equality check predicate on the "acreage" field. It's identical to AcreageEQ.
func Acreage(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAcreage, v))
}

// ArtccID applies equality check predicate on the "artcc_id" field. It's identical to ArtccIDEQ.
func ArtccID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldArtccID, v))
}

// ArtccName applies equality check predicate on the "artcc_name" field. It's identical to ArtccNameEQ.
func ArtccName(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldArtccName, v))
}

// ComputerID applies equality check predicate on the "computer_id" field. It's identical to ComputerIDEQ.
func ComputerID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldComputerID, v))
}

// FssOnAirport applies equality check predicate on the "fss_on_airport" field. It's identical to FssOnAirportEQ.
func FssOnAirport(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssOnAirport, v))
}

// FssID applies equality check predicate on the "fss_id" field. It's identical to FssIDEQ.
func FssID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssID, v))
}

// FssName applies equality check predicate on the "fss_name" field. It's identical to FssNameEQ.
func FssName(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssName, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldPhoneNumber, v))
}

// TollFreeNumber applies equality check predicate on the "toll_free_number" field. It's identical to TollFreeNumberEQ.
func TollFreeNumber(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldTollFreeNumber, v))
}

// AlternateFssID applies equality check predicate on the "alternate_fss_id" field. It's identical to AlternateFssIDEQ.
func AlternateFssID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateFssID, v))
}

// AlternateFssName applies equality check predicate on the "alternate_fss_name" field. It's identical to AlternateFssNameEQ.
func AlternateFssName(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateFssName, v))
}

// AlternateTollFreeNumber applies equality check predicate on the "alternate_toll_free_number" field. It's identical to AlternateTollFreeNumberEQ.
func AlternateTollFreeNumber(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateTollFreeNumber, v))
}

// NotamID applies equality check predicate on the "notam_id" field. It's identical to NotamIDEQ.
func NotamID(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldNotamID, v))
}

// NotamFlag applies equality check predicate on the "notam_flag" field. It's identical to NotamFlagEQ.
func NotamFlag(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldNotamFlag, v))
}

// ActivationDate applies equality check predicate on the "activation_date" field. It's identical to ActivationDateEQ.
func ActivationDate(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldActivationDate, v))
}

// SiteIDEQ applies the EQ predicate on the "site_id" field.
func SiteIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldSiteID, v))
}

// SiteIDNEQ applies the NEQ predicate on the "site_id" field.
func SiteIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldSiteID, v))
}

// SiteIDIn applies the In predicate on the "site_id" field.
func SiteIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldSiteID, vs...))
}

// SiteIDNotIn applies the NotIn predicate on the "site_id" field.
func SiteIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldSiteID, vs...))
}

// SiteIDGT applies the GT predicate on the "site_id" field.
func SiteIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldSiteID, v))
}

// SiteIDGTE applies the GTE predicate on the "site_id" field.
func SiteIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldSiteID, v))
}

// SiteIDLT applies the LT predicate on the "site_id" field.
func SiteIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldSiteID, v))
}

// SiteIDLTE applies the LTE predicate on the "site_id" field.
func SiteIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldSiteID, v))
}

// SiteIDContains applies the Contains predicate on the "site_id" field.
func SiteIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldSiteID, v))
}

// SiteIDHasPrefix applies the HasPrefix predicate on the "site_id" field.
func SiteIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldSiteID, v))
}

// SiteIDHasSuffix applies the HasSuffix predicate on the "site_id" field.
func SiteIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldSiteID, v))
}

// SiteIDEqualFold applies the EqualFold predicate on the "site_id" field.
func SiteIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldSiteID, v))
}

// SiteIDContainsFold applies the ContainsFold predicate on the "site_id" field.
func SiteIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldSiteID, v))
}

// FacilityTypeEQ applies the EQ predicate on the "facility_type" field.
func FacilityTypeEQ(v FacilityType) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFacilityType, v))
}

// FacilityTypeNEQ applies the NEQ predicate on the "facility_type" field.
func FacilityTypeNEQ(v FacilityType) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldFacilityType, v))
}

// FacilityTypeIn applies the In predicate on the "facility_type" field.
func FacilityTypeIn(vs ...FacilityType) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldFacilityType, vs...))
}

// FacilityTypeNotIn applies the NotIn predicate on the "facility_type" field.
func FacilityTypeNotIn(vs ...FacilityType) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldFacilityType, vs...))
}

// AirportIDEQ applies the EQ predicate on the "airport_id" field.
func AirportIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAirportID, v))
}

// AirportIDNEQ applies the NEQ predicate on the "airport_id" field.
func AirportIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAirportID, v))
}

// AirportIDIn applies the In predicate on the "airport_id" field.
func AirportIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAirportID, vs...))
}

// AirportIDNotIn applies the NotIn predicate on the "airport_id" field.
func AirportIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAirportID, vs...))
}

// AirportIDGT applies the GT predicate on the "airport_id" field.
func AirportIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAirportID, v))
}

// AirportIDGTE applies the GTE predicate on the "airport_id" field.
func AirportIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAirportID, v))
}

// AirportIDLT applies the LT predicate on the "airport_id" field.
func AirportIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAirportID, v))
}

// AirportIDLTE applies the LTE predicate on the "airport_id" field.
func AirportIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAirportID, v))
}

// AirportIDContains applies the Contains predicate on the "airport_id" field.
func AirportIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldAirportID, v))
}

// AirportIDHasPrefix applies the HasPrefix predicate on the "airport_id" field.
func AirportIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldAirportID, v))
}

// AirportIDHasSuffix applies the HasSuffix predicate on the "airport_id" field.
func AirportIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldAirportID, v))
}

// AirportIDEqualFold applies the EqualFold predicate on the "airport_id" field.
func AirportIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldAirportID, v))
}

// AirportIDContainsFold applies the ContainsFold predicate on the "airport_id" field.
func AirportIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldAirportID, v))
}

// AdoCodeEQ applies the EQ predicate on the "ado_code" field.
func AdoCodeEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAdoCode, v))
}

// AdoCodeNEQ applies the NEQ predicate on the "ado_code" field.
func AdoCodeNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAdoCode, v))
}

// AdoCodeIn applies the In predicate on the "ado_code" field.
func AdoCodeIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAdoCode, vs...))
}

// AdoCodeNotIn applies the NotIn predicate on the "ado_code" field.
func AdoCodeNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAdoCode, vs...))
}

// AdoCodeGT applies the GT predicate on the "ado_code" field.
func AdoCodeGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAdoCode, v))
}

// AdoCodeGTE applies the GTE predicate on the "ado_code" field.
func AdoCodeGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAdoCode, v))
}

// AdoCodeLT applies the LT predicate on the "ado_code" field.
func AdoCodeLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAdoCode, v))
}

// AdoCodeLTE applies the LTE predicate on the "ado_code" field.
func AdoCodeLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAdoCode, v))
}

// AdoCodeContains applies the Contains predicate on the "ado_code" field.
func AdoCodeContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldAdoCode, v))
}

// AdoCodeHasPrefix applies the HasPrefix predicate on the "ado_code" field.
func AdoCodeHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldAdoCode, v))
}

// AdoCodeHasSuffix applies the HasSuffix predicate on the "ado_code" field.
func AdoCodeHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldAdoCode, v))
}

// AdoCodeEqualFold applies the EqualFold predicate on the "ado_code" field.
func AdoCodeEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldAdoCode, v))
}

// AdoCodeContainsFold applies the ContainsFold predicate on the "ado_code" field.
func AdoCodeContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldAdoCode, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldName, v))
}

// OwnershipTypeEQ applies the EQ predicate on the "ownership_type" field.
func OwnershipTypeEQ(v OwnershipType) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldOwnershipType, v))
}

// OwnershipTypeNEQ applies the NEQ predicate on the "ownership_type" field.
func OwnershipTypeNEQ(v OwnershipType) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldOwnershipType, v))
}

// OwnershipTypeIn applies the In predicate on the "ownership_type" field.
func OwnershipTypeIn(vs ...OwnershipType) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldOwnershipType, vs...))
}

// OwnershipTypeNotIn applies the NotIn predicate on the "ownership_type" field.
func OwnershipTypeNotIn(vs ...OwnershipType) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldOwnershipType, vs...))
}

// UsageEQ applies the EQ predicate on the "usage" field.
func UsageEQ(v Usage) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldUsage, v))
}

// UsageNEQ applies the NEQ predicate on the "usage" field.
func UsageNEQ(v Usage) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldUsage, v))
}

// UsageIn applies the In predicate on the "usage" field.
func UsageIn(vs ...Usage) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldUsage, vs...))
}

// UsageNotIn applies the NotIn predicate on the "usage" field.
func UsageNotIn(vs ...Usage) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldUsage, vs...))
}

// LatitudeEQ applies the EQ predicate on the "latitude" field.
func LatitudeEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldLatitude, v))
}

// LatitudeNEQ applies the NEQ predicate on the "latitude" field.
func LatitudeNEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldLatitude, v))
}

// LatitudeIn applies the In predicate on the "latitude" field.
func LatitudeIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldLatitude, vs...))
}

// LatitudeNotIn applies the NotIn predicate on the "latitude" field.
func LatitudeNotIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldLatitude, vs...))
}

// LatitudeGT applies the GT predicate on the "latitude" field.
func LatitudeGT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldLatitude, v))
}

// LatitudeGTE applies the GTE predicate on the "latitude" field.
func LatitudeGTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldLatitude, v))
}

// LatitudeLT applies the LT predicate on the "latitude" field.
func LatitudeLT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldLatitude, v))
}

// LatitudeLTE applies the LTE predicate on the "latitude" field.
func LatitudeLTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldLatitude, v))
}

// LongitudeEQ applies the EQ predicate on the "longitude" field.
func LongitudeEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldLongitude, v))
}

// LongitudeNEQ applies the NEQ predicate on the "longitude" field.
func LongitudeNEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldLongitude, v))
}

// LongitudeIn applies the In predicate on the "longitude" field.
func LongitudeIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldLongitude, vs...))
}

// LongitudeNotIn applies the NotIn predicate on the "longitude" field.
func LongitudeNotIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldLongitude, vs...))
}

// LongitudeGT applies the GT predicate on the "longitude" field.
func LongitudeGT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldLongitude, v))
}

// LongitudeGTE applies the GTE predicate on the "longitude" field.
func LongitudeGTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldLongitude, v))
}

// LongitudeLT applies the LT predicate on the "longitude" field.
func LongitudeLT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldLongitude, v))
}

// LongitudeLTE applies the LTE predicate on the "longitude" field.
func LongitudeLTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldLongitude, v))
}

// LocationSurveyMethodEQ applies the EQ predicate on the "location_survey_method" field.
func LocationSurveyMethodEQ(v LocationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldLocationSurveyMethod, v))
}

// LocationSurveyMethodNEQ applies the NEQ predicate on the "location_survey_method" field.
func LocationSurveyMethodNEQ(v LocationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldLocationSurveyMethod, v))
}

// LocationSurveyMethodIn applies the In predicate on the "location_survey_method" field.
func LocationSurveyMethodIn(vs ...LocationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldLocationSurveyMethod, vs...))
}

// LocationSurveyMethodNotIn applies the NotIn predicate on the "location_survey_method" field.
func LocationSurveyMethodNotIn(vs ...LocationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldLocationSurveyMethod, vs...))
}

// ElevationEQ applies the EQ predicate on the "elevation" field.
func ElevationEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldElevation, v))
}

// ElevationNEQ applies the NEQ predicate on the "elevation" field.
func ElevationNEQ(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldElevation, v))
}

// ElevationIn applies the In predicate on the "elevation" field.
func ElevationIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldElevation, vs...))
}

// ElevationNotIn applies the NotIn predicate on the "elevation" field.
func ElevationNotIn(vs ...float32) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldElevation, vs...))
}

// ElevationGT applies the GT predicate on the "elevation" field.
func ElevationGT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldElevation, v))
}

// ElevationGTE applies the GTE predicate on the "elevation" field.
func ElevationGTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldElevation, v))
}

// ElevationLT applies the LT predicate on the "elevation" field.
func ElevationLT(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldElevation, v))
}

// ElevationLTE applies the LTE predicate on the "elevation" field.
func ElevationLTE(v float32) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldElevation, v))
}

// ElevationSurveyMethodEQ applies the EQ predicate on the "elevation_survey_method" field.
func ElevationSurveyMethodEQ(v ElevationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldElevationSurveyMethod, v))
}

// ElevationSurveyMethodNEQ applies the NEQ predicate on the "elevation_survey_method" field.
func ElevationSurveyMethodNEQ(v ElevationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldElevationSurveyMethod, v))
}

// ElevationSurveyMethodIn applies the In predicate on the "elevation_survey_method" field.
func ElevationSurveyMethodIn(vs ...ElevationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldElevationSurveyMethod, vs...))
}

// ElevationSurveyMethodNotIn applies the NotIn predicate on the "elevation_survey_method" field.
func ElevationSurveyMethodNotIn(vs ...ElevationSurveyMethod) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldElevationSurveyMethod, vs...))
}

// MagneticVarianceEQ applies the EQ predicate on the "magnetic_variance" field.
func MagneticVarianceEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldMagneticVariance, v))
}

// MagneticVarianceNEQ applies the NEQ predicate on the "magnetic_variance" field.
func MagneticVarianceNEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldMagneticVariance, v))
}

// MagneticVarianceIn applies the In predicate on the "magnetic_variance" field.
func MagneticVarianceIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldMagneticVariance, vs...))
}

// MagneticVarianceNotIn applies the NotIn predicate on the "magnetic_variance" field.
func MagneticVarianceNotIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldMagneticVariance, vs...))
}

// MagneticVarianceGT applies the GT predicate on the "magnetic_variance" field.
func MagneticVarianceGT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldMagneticVariance, v))
}

// MagneticVarianceGTE applies the GTE predicate on the "magnetic_variance" field.
func MagneticVarianceGTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldMagneticVariance, v))
}

// MagneticVarianceLT applies the LT predicate on the "magnetic_variance" field.
func MagneticVarianceLT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldMagneticVariance, v))
}

// MagneticVarianceLTE applies the LTE predicate on the "magnetic_variance" field.
func MagneticVarianceLTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldMagneticVariance, v))
}

// MagneticVarianceYearEQ applies the EQ predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldMagneticVarianceYear, v))
}

// MagneticVarianceYearNEQ applies the NEQ predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearNEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldMagneticVarianceYear, v))
}

// MagneticVarianceYearIn applies the In predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldMagneticVarianceYear, vs...))
}

// MagneticVarianceYearNotIn applies the NotIn predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearNotIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldMagneticVarianceYear, vs...))
}

// MagneticVarianceYearGT applies the GT predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearGT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldMagneticVarianceYear, v))
}

// MagneticVarianceYearGTE applies the GTE predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearGTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldMagneticVarianceYear, v))
}

// MagneticVarianceYearLT applies the LT predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearLT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldMagneticVarianceYear, v))
}

// MagneticVarianceYearLTE applies the LTE predicate on the "magnetic_variance_year" field.
func MagneticVarianceYearLTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldMagneticVarianceYear, v))
}

// TrafficPatternAltitudeEQ applies the EQ predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldTrafficPatternAltitude, v))
}

// TrafficPatternAltitudeNEQ applies the NEQ predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeNEQ(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldTrafficPatternAltitude, v))
}

// TrafficPatternAltitudeIn applies the In predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldTrafficPatternAltitude, vs...))
}

// TrafficPatternAltitudeNotIn applies the NotIn predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeNotIn(vs ...int8) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldTrafficPatternAltitude, vs...))
}

// TrafficPatternAltitudeGT applies the GT predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeGT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldTrafficPatternAltitude, v))
}

// TrafficPatternAltitudeGTE applies the GTE predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeGTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldTrafficPatternAltitude, v))
}

// TrafficPatternAltitudeLT applies the LT predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeLT(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldTrafficPatternAltitude, v))
}

// TrafficPatternAltitudeLTE applies the LTE predicate on the "traffic_pattern_altitude" field.
func TrafficPatternAltitudeLTE(v int8) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldTrafficPatternAltitude, v))
}

// ChartNameEQ applies the EQ predicate on the "chart_name" field.
func ChartNameEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldChartName, v))
}

// ChartNameNEQ applies the NEQ predicate on the "chart_name" field.
func ChartNameNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldChartName, v))
}

// ChartNameIn applies the In predicate on the "chart_name" field.
func ChartNameIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldChartName, vs...))
}

// ChartNameNotIn applies the NotIn predicate on the "chart_name" field.
func ChartNameNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldChartName, vs...))
}

// ChartNameGT applies the GT predicate on the "chart_name" field.
func ChartNameGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldChartName, v))
}

// ChartNameGTE applies the GTE predicate on the "chart_name" field.
func ChartNameGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldChartName, v))
}

// ChartNameLT applies the LT predicate on the "chart_name" field.
func ChartNameLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldChartName, v))
}

// ChartNameLTE applies the LTE predicate on the "chart_name" field.
func ChartNameLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldChartName, v))
}

// ChartNameContains applies the Contains predicate on the "chart_name" field.
func ChartNameContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldChartName, v))
}

// ChartNameHasPrefix applies the HasPrefix predicate on the "chart_name" field.
func ChartNameHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldChartName, v))
}

// ChartNameHasSuffix applies the HasSuffix predicate on the "chart_name" field.
func ChartNameHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldChartName, v))
}

// ChartNameEqualFold applies the EqualFold predicate on the "chart_name" field.
func ChartNameEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldChartName, v))
}

// ChartNameContainsFold applies the ContainsFold predicate on the "chart_name" field.
func ChartNameContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldChartName, v))
}

// DistanceToCityEQ applies the EQ predicate on the "distance_to_city" field.
func DistanceToCityEQ(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldDistanceToCity, v))
}

// DistanceToCityNEQ applies the NEQ predicate on the "distance_to_city" field.
func DistanceToCityNEQ(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldDistanceToCity, v))
}

// DistanceToCityIn applies the In predicate on the "distance_to_city" field.
func DistanceToCityIn(vs ...uint8) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldDistanceToCity, vs...))
}

// DistanceToCityNotIn applies the NotIn predicate on the "distance_to_city" field.
func DistanceToCityNotIn(vs ...uint8) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldDistanceToCity, vs...))
}

// DistanceToCityGT applies the GT predicate on the "distance_to_city" field.
func DistanceToCityGT(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldDistanceToCity, v))
}

// DistanceToCityGTE applies the GTE predicate on the "distance_to_city" field.
func DistanceToCityGTE(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldDistanceToCity, v))
}

// DistanceToCityLT applies the LT predicate on the "distance_to_city" field.
func DistanceToCityLT(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldDistanceToCity, v))
}

// DistanceToCityLTE applies the LTE predicate on the "distance_to_city" field.
func DistanceToCityLTE(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldDistanceToCity, v))
}

// DirectionToCityEQ applies the EQ predicate on the "direction_to_city" field.
func DirectionToCityEQ(v DirectionToCity) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldDirectionToCity, v))
}

// DirectionToCityNEQ applies the NEQ predicate on the "direction_to_city" field.
func DirectionToCityNEQ(v DirectionToCity) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldDirectionToCity, v))
}

// DirectionToCityIn applies the In predicate on the "direction_to_city" field.
func DirectionToCityIn(vs ...DirectionToCity) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldDirectionToCity, vs...))
}

// DirectionToCityNotIn applies the NotIn predicate on the "direction_to_city" field.
func DirectionToCityNotIn(vs ...DirectionToCity) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldDirectionToCity, vs...))
}

// AcreageEQ applies the EQ predicate on the "acreage" field.
func AcreageEQ(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAcreage, v))
}

// AcreageNEQ applies the NEQ predicate on the "acreage" field.
func AcreageNEQ(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAcreage, v))
}

// AcreageIn applies the In predicate on the "acreage" field.
func AcreageIn(vs ...uint8) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAcreage, vs...))
}

// AcreageNotIn applies the NotIn predicate on the "acreage" field.
func AcreageNotIn(vs ...uint8) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAcreage, vs...))
}

// AcreageGT applies the GT predicate on the "acreage" field.
func AcreageGT(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAcreage, v))
}

// AcreageGTE applies the GTE predicate on the "acreage" field.
func AcreageGTE(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAcreage, v))
}

// AcreageLT applies the LT predicate on the "acreage" field.
func AcreageLT(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAcreage, v))
}

// AcreageLTE applies the LTE predicate on the "acreage" field.
func AcreageLTE(v uint8) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAcreage, v))
}

// ArtccIDEQ applies the EQ predicate on the "artcc_id" field.
func ArtccIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldArtccID, v))
}

// ArtccIDNEQ applies the NEQ predicate on the "artcc_id" field.
func ArtccIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldArtccID, v))
}

// ArtccIDIn applies the In predicate on the "artcc_id" field.
func ArtccIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldArtccID, vs...))
}

// ArtccIDNotIn applies the NotIn predicate on the "artcc_id" field.
func ArtccIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldArtccID, vs...))
}

// ArtccIDGT applies the GT predicate on the "artcc_id" field.
func ArtccIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldArtccID, v))
}

// ArtccIDGTE applies the GTE predicate on the "artcc_id" field.
func ArtccIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldArtccID, v))
}

// ArtccIDLT applies the LT predicate on the "artcc_id" field.
func ArtccIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldArtccID, v))
}

// ArtccIDLTE applies the LTE predicate on the "artcc_id" field.
func ArtccIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldArtccID, v))
}

// ArtccIDContains applies the Contains predicate on the "artcc_id" field.
func ArtccIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldArtccID, v))
}

// ArtccIDHasPrefix applies the HasPrefix predicate on the "artcc_id" field.
func ArtccIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldArtccID, v))
}

// ArtccIDHasSuffix applies the HasSuffix predicate on the "artcc_id" field.
func ArtccIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldArtccID, v))
}

// ArtccIDEqualFold applies the EqualFold predicate on the "artcc_id" field.
func ArtccIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldArtccID, v))
}

// ArtccIDContainsFold applies the ContainsFold predicate on the "artcc_id" field.
func ArtccIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldArtccID, v))
}

// ArtccNameEQ applies the EQ predicate on the "artcc_name" field.
func ArtccNameEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldArtccName, v))
}

// ArtccNameNEQ applies the NEQ predicate on the "artcc_name" field.
func ArtccNameNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldArtccName, v))
}

// ArtccNameIn applies the In predicate on the "artcc_name" field.
func ArtccNameIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldArtccName, vs...))
}

// ArtccNameNotIn applies the NotIn predicate on the "artcc_name" field.
func ArtccNameNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldArtccName, vs...))
}

// ArtccNameGT applies the GT predicate on the "artcc_name" field.
func ArtccNameGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldArtccName, v))
}

// ArtccNameGTE applies the GTE predicate on the "artcc_name" field.
func ArtccNameGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldArtccName, v))
}

// ArtccNameLT applies the LT predicate on the "artcc_name" field.
func ArtccNameLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldArtccName, v))
}

// ArtccNameLTE applies the LTE predicate on the "artcc_name" field.
func ArtccNameLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldArtccName, v))
}

// ArtccNameContains applies the Contains predicate on the "artcc_name" field.
func ArtccNameContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldArtccName, v))
}

// ArtccNameHasPrefix applies the HasPrefix predicate on the "artcc_name" field.
func ArtccNameHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldArtccName, v))
}

// ArtccNameHasSuffix applies the HasSuffix predicate on the "artcc_name" field.
func ArtccNameHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldArtccName, v))
}

// ArtccNameEqualFold applies the EqualFold predicate on the "artcc_name" field.
func ArtccNameEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldArtccName, v))
}

// ArtccNameContainsFold applies the ContainsFold predicate on the "artcc_name" field.
func ArtccNameContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldArtccName, v))
}

// ComputerIDEQ applies the EQ predicate on the "computer_id" field.
func ComputerIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldComputerID, v))
}

// ComputerIDNEQ applies the NEQ predicate on the "computer_id" field.
func ComputerIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldComputerID, v))
}

// ComputerIDIn applies the In predicate on the "computer_id" field.
func ComputerIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldComputerID, vs...))
}

// ComputerIDNotIn applies the NotIn predicate on the "computer_id" field.
func ComputerIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldComputerID, vs...))
}

// ComputerIDGT applies the GT predicate on the "computer_id" field.
func ComputerIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldComputerID, v))
}

// ComputerIDGTE applies the GTE predicate on the "computer_id" field.
func ComputerIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldComputerID, v))
}

// ComputerIDLT applies the LT predicate on the "computer_id" field.
func ComputerIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldComputerID, v))
}

// ComputerIDLTE applies the LTE predicate on the "computer_id" field.
func ComputerIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldComputerID, v))
}

// ComputerIDContains applies the Contains predicate on the "computer_id" field.
func ComputerIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldComputerID, v))
}

// ComputerIDHasPrefix applies the HasPrefix predicate on the "computer_id" field.
func ComputerIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldComputerID, v))
}

// ComputerIDHasSuffix applies the HasSuffix predicate on the "computer_id" field.
func ComputerIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldComputerID, v))
}

// ComputerIDEqualFold applies the EqualFold predicate on the "computer_id" field.
func ComputerIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldComputerID, v))
}

// ComputerIDContainsFold applies the ContainsFold predicate on the "computer_id" field.
func ComputerIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldComputerID, v))
}

// FssOnAirportEQ applies the EQ predicate on the "fss_on_airport" field.
func FssOnAirportEQ(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssOnAirport, v))
}

// FssOnAirportNEQ applies the NEQ predicate on the "fss_on_airport" field.
func FssOnAirportNEQ(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldFssOnAirport, v))
}

// FssIDEQ applies the EQ predicate on the "fss_id" field.
func FssIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssID, v))
}

// FssIDNEQ applies the NEQ predicate on the "fss_id" field.
func FssIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldFssID, v))
}

// FssIDIn applies the In predicate on the "fss_id" field.
func FssIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldFssID, vs...))
}

// FssIDNotIn applies the NotIn predicate on the "fss_id" field.
func FssIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldFssID, vs...))
}

// FssIDGT applies the GT predicate on the "fss_id" field.
func FssIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldFssID, v))
}

// FssIDGTE applies the GTE predicate on the "fss_id" field.
func FssIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldFssID, v))
}

// FssIDLT applies the LT predicate on the "fss_id" field.
func FssIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldFssID, v))
}

// FssIDLTE applies the LTE predicate on the "fss_id" field.
func FssIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldFssID, v))
}

// FssIDContains applies the Contains predicate on the "fss_id" field.
func FssIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldFssID, v))
}

// FssIDHasPrefix applies the HasPrefix predicate on the "fss_id" field.
func FssIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldFssID, v))
}

// FssIDHasSuffix applies the HasSuffix predicate on the "fss_id" field.
func FssIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldFssID, v))
}

// FssIDEqualFold applies the EqualFold predicate on the "fss_id" field.
func FssIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldFssID, v))
}

// FssIDContainsFold applies the ContainsFold predicate on the "fss_id" field.
func FssIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldFssID, v))
}

// FssNameEQ applies the EQ predicate on the "fss_name" field.
func FssNameEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldFssName, v))
}

// FssNameNEQ applies the NEQ predicate on the "fss_name" field.
func FssNameNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldFssName, v))
}

// FssNameIn applies the In predicate on the "fss_name" field.
func FssNameIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldFssName, vs...))
}

// FssNameNotIn applies the NotIn predicate on the "fss_name" field.
func FssNameNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldFssName, vs...))
}

// FssNameGT applies the GT predicate on the "fss_name" field.
func FssNameGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldFssName, v))
}

// FssNameGTE applies the GTE predicate on the "fss_name" field.
func FssNameGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldFssName, v))
}

// FssNameLT applies the LT predicate on the "fss_name" field.
func FssNameLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldFssName, v))
}

// FssNameLTE applies the LTE predicate on the "fss_name" field.
func FssNameLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldFssName, v))
}

// FssNameContains applies the Contains predicate on the "fss_name" field.
func FssNameContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldFssName, v))
}

// FssNameHasPrefix applies the HasPrefix predicate on the "fss_name" field.
func FssNameHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldFssName, v))
}

// FssNameHasSuffix applies the HasSuffix predicate on the "fss_name" field.
func FssNameHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldFssName, v))
}

// FssNameEqualFold applies the EqualFold predicate on the "fss_name" field.
func FssNameEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldFssName, v))
}

// FssNameContainsFold applies the ContainsFold predicate on the "fss_name" field.
func FssNameContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldFssName, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// TollFreeNumberEQ applies the EQ predicate on the "toll_free_number" field.
func TollFreeNumberEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldTollFreeNumber, v))
}

// TollFreeNumberNEQ applies the NEQ predicate on the "toll_free_number" field.
func TollFreeNumberNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldTollFreeNumber, v))
}

// TollFreeNumberIn applies the In predicate on the "toll_free_number" field.
func TollFreeNumberIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldTollFreeNumber, vs...))
}

// TollFreeNumberNotIn applies the NotIn predicate on the "toll_free_number" field.
func TollFreeNumberNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldTollFreeNumber, vs...))
}

// TollFreeNumberGT applies the GT predicate on the "toll_free_number" field.
func TollFreeNumberGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldTollFreeNumber, v))
}

// TollFreeNumberGTE applies the GTE predicate on the "toll_free_number" field.
func TollFreeNumberGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldTollFreeNumber, v))
}

// TollFreeNumberLT applies the LT predicate on the "toll_free_number" field.
func TollFreeNumberLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldTollFreeNumber, v))
}

// TollFreeNumberLTE applies the LTE predicate on the "toll_free_number" field.
func TollFreeNumberLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldTollFreeNumber, v))
}

// TollFreeNumberContains applies the Contains predicate on the "toll_free_number" field.
func TollFreeNumberContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldTollFreeNumber, v))
}

// TollFreeNumberHasPrefix applies the HasPrefix predicate on the "toll_free_number" field.
func TollFreeNumberHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldTollFreeNumber, v))
}

// TollFreeNumberHasSuffix applies the HasSuffix predicate on the "toll_free_number" field.
func TollFreeNumberHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldTollFreeNumber, v))
}

// TollFreeNumberEqualFold applies the EqualFold predicate on the "toll_free_number" field.
func TollFreeNumberEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldTollFreeNumber, v))
}

// TollFreeNumberContainsFold applies the ContainsFold predicate on the "toll_free_number" field.
func TollFreeNumberContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldTollFreeNumber, v))
}

// AlternateFssIDEQ applies the EQ predicate on the "alternate_fss_id" field.
func AlternateFssIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateFssID, v))
}

// AlternateFssIDNEQ applies the NEQ predicate on the "alternate_fss_id" field.
func AlternateFssIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAlternateFssID, v))
}

// AlternateFssIDIn applies the In predicate on the "alternate_fss_id" field.
func AlternateFssIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAlternateFssID, vs...))
}

// AlternateFssIDNotIn applies the NotIn predicate on the "alternate_fss_id" field.
func AlternateFssIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAlternateFssID, vs...))
}

// AlternateFssIDGT applies the GT predicate on the "alternate_fss_id" field.
func AlternateFssIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAlternateFssID, v))
}

// AlternateFssIDGTE applies the GTE predicate on the "alternate_fss_id" field.
func AlternateFssIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAlternateFssID, v))
}

// AlternateFssIDLT applies the LT predicate on the "alternate_fss_id" field.
func AlternateFssIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAlternateFssID, v))
}

// AlternateFssIDLTE applies the LTE predicate on the "alternate_fss_id" field.
func AlternateFssIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAlternateFssID, v))
}

// AlternateFssIDContains applies the Contains predicate on the "alternate_fss_id" field.
func AlternateFssIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldAlternateFssID, v))
}

// AlternateFssIDHasPrefix applies the HasPrefix predicate on the "alternate_fss_id" field.
func AlternateFssIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldAlternateFssID, v))
}

// AlternateFssIDHasSuffix applies the HasSuffix predicate on the "alternate_fss_id" field.
func AlternateFssIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldAlternateFssID, v))
}

// AlternateFssIDEqualFold applies the EqualFold predicate on the "alternate_fss_id" field.
func AlternateFssIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldAlternateFssID, v))
}

// AlternateFssIDContainsFold applies the ContainsFold predicate on the "alternate_fss_id" field.
func AlternateFssIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldAlternateFssID, v))
}

// AlternateFssNameEQ applies the EQ predicate on the "alternate_fss_name" field.
func AlternateFssNameEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateFssName, v))
}

// AlternateFssNameNEQ applies the NEQ predicate on the "alternate_fss_name" field.
func AlternateFssNameNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAlternateFssName, v))
}

// AlternateFssNameIn applies the In predicate on the "alternate_fss_name" field.
func AlternateFssNameIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAlternateFssName, vs...))
}

// AlternateFssNameNotIn applies the NotIn predicate on the "alternate_fss_name" field.
func AlternateFssNameNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAlternateFssName, vs...))
}

// AlternateFssNameGT applies the GT predicate on the "alternate_fss_name" field.
func AlternateFssNameGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAlternateFssName, v))
}

// AlternateFssNameGTE applies the GTE predicate on the "alternate_fss_name" field.
func AlternateFssNameGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAlternateFssName, v))
}

// AlternateFssNameLT applies the LT predicate on the "alternate_fss_name" field.
func AlternateFssNameLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAlternateFssName, v))
}

// AlternateFssNameLTE applies the LTE predicate on the "alternate_fss_name" field.
func AlternateFssNameLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAlternateFssName, v))
}

// AlternateFssNameContains applies the Contains predicate on the "alternate_fss_name" field.
func AlternateFssNameContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldAlternateFssName, v))
}

// AlternateFssNameHasPrefix applies the HasPrefix predicate on the "alternate_fss_name" field.
func AlternateFssNameHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldAlternateFssName, v))
}

// AlternateFssNameHasSuffix applies the HasSuffix predicate on the "alternate_fss_name" field.
func AlternateFssNameHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldAlternateFssName, v))
}

// AlternateFssNameEqualFold applies the EqualFold predicate on the "alternate_fss_name" field.
func AlternateFssNameEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldAlternateFssName, v))
}

// AlternateFssNameContainsFold applies the ContainsFold predicate on the "alternate_fss_name" field.
func AlternateFssNameContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldAlternateFssName, v))
}

// AlternateTollFreeNumberEQ applies the EQ predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberNEQ applies the NEQ predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberIn applies the In predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldAlternateTollFreeNumber, vs...))
}

// AlternateTollFreeNumberNotIn applies the NotIn predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldAlternateTollFreeNumber, vs...))
}

// AlternateTollFreeNumberGT applies the GT predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberGTE applies the GTE predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberLT applies the LT predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberLTE applies the LTE predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberContains applies the Contains predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberHasPrefix applies the HasPrefix predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberHasSuffix applies the HasSuffix predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberEqualFold applies the EqualFold predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldAlternateTollFreeNumber, v))
}

// AlternateTollFreeNumberContainsFold applies the ContainsFold predicate on the "alternate_toll_free_number" field.
func AlternateTollFreeNumberContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldAlternateTollFreeNumber, v))
}

// NotamIDEQ applies the EQ predicate on the "notam_id" field.
func NotamIDEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldNotamID, v))
}

// NotamIDNEQ applies the NEQ predicate on the "notam_id" field.
func NotamIDNEQ(v string) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldNotamID, v))
}

// NotamIDIn applies the In predicate on the "notam_id" field.
func NotamIDIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldNotamID, vs...))
}

// NotamIDNotIn applies the NotIn predicate on the "notam_id" field.
func NotamIDNotIn(vs ...string) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldNotamID, vs...))
}

// NotamIDGT applies the GT predicate on the "notam_id" field.
func NotamIDGT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldNotamID, v))
}

// NotamIDGTE applies the GTE predicate on the "notam_id" field.
func NotamIDGTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldNotamID, v))
}

// NotamIDLT applies the LT predicate on the "notam_id" field.
func NotamIDLT(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldNotamID, v))
}

// NotamIDLTE applies the LTE predicate on the "notam_id" field.
func NotamIDLTE(v string) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldNotamID, v))
}

// NotamIDContains applies the Contains predicate on the "notam_id" field.
func NotamIDContains(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContains(FieldNotamID, v))
}

// NotamIDHasPrefix applies the HasPrefix predicate on the "notam_id" field.
func NotamIDHasPrefix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasPrefix(FieldNotamID, v))
}

// NotamIDHasSuffix applies the HasSuffix predicate on the "notam_id" field.
func NotamIDHasSuffix(v string) predicate.Airport {
	return predicate.Airport(sql.FieldHasSuffix(FieldNotamID, v))
}

// NotamIDEqualFold applies the EqualFold predicate on the "notam_id" field.
func NotamIDEqualFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldEqualFold(FieldNotamID, v))
}

// NotamIDContainsFold applies the ContainsFold predicate on the "notam_id" field.
func NotamIDContainsFold(v string) predicate.Airport {
	return predicate.Airport(sql.FieldContainsFold(FieldNotamID, v))
}

// NotamFlagEQ applies the EQ predicate on the "notam_flag" field.
func NotamFlagEQ(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldNotamFlag, v))
}

// NotamFlagNEQ applies the NEQ predicate on the "notam_flag" field.
func NotamFlagNEQ(v bool) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldNotamFlag, v))
}

// ActivationDateEQ applies the EQ predicate on the "activation_date" field.
func ActivationDateEQ(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldActivationDate, v))
}

// ActivationDateNEQ applies the NEQ predicate on the "activation_date" field.
func ActivationDateNEQ(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldActivationDate, v))
}

// ActivationDateIn applies the In predicate on the "activation_date" field.
func ActivationDateIn(vs ...time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldActivationDate, vs...))
}

// ActivationDateNotIn applies the NotIn predicate on the "activation_date" field.
func ActivationDateNotIn(vs ...time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldActivationDate, vs...))
}

// ActivationDateGT applies the GT predicate on the "activation_date" field.
func ActivationDateGT(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldGT(FieldActivationDate, v))
}

// ActivationDateGTE applies the GTE predicate on the "activation_date" field.
func ActivationDateGTE(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldGTE(FieldActivationDate, v))
}

// ActivationDateLT applies the LT predicate on the "activation_date" field.
func ActivationDateLT(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldLT(FieldActivationDate, v))
}

// ActivationDateLTE applies the LTE predicate on the "activation_date" field.
func ActivationDateLTE(v time.Time) predicate.Airport {
	return predicate.Airport(sql.FieldLTE(FieldActivationDate, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.Airport {
	return predicate.Airport(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.Airport {
	return predicate.Airport(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.Airport {
	return predicate.Airport(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.Airport {
	return predicate.Airport(sql.FieldNotIn(FieldStatus, vs...))
}

// HasState applies the HasEdge predicate on the "state" edge.
func HasState() predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, StateTable, StateColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasStateWith applies the HasEdge predicate on the "state" edge with a given conditions (other predicates).
func HasStateWith(preds ...predicate.State) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := newStateStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCity applies the HasEdge predicate on the "city" edge.
func HasCity() predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, CityTable, CityColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCityWith applies the HasEdge predicate on the "city" edge with a given conditions (other predicates).
func HasCityWith(preds ...predicate.City) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := newCityStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRegion applies the HasEdge predicate on the "region" edge.
func HasRegion() predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, RegionTable, RegionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRegionWith applies the HasEdge predicate on the "region" edge with a given conditions (other predicates).
func HasRegionWith(preds ...predicate.Region) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		step := newRegionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Airport) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Airport) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Airport) predicate.Airport {
	return predicate.Airport(func(s *sql.Selector) {
		p(s.Not())
	})
}
